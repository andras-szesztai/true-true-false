// Docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum RoomStage {
  LOBBY
  PREPARATION
  GAME
  END
}

enum RoundStage {
  IDLE
  QUESTIONING
  QUESS_REVEAL
  SCORING
}

model Room {
  id               Int        @id @default(autoincrement())
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  slug             String     @unique
  players          Player[]
  stage            RoomStage  @default(LOBBY)
  selectedPlayerId Int?
  roundStage       RoundStage @default(IDLE)
}

enum Role {
  USER
  ADMIN
}

model Player {
  id             Int         @id @default(autoincrement())
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  slug           String      @unique
  role           Role
  isActive       Boolean
  showLoading    Boolean     @default(false)
  name           String
  emoji          String
  score          Int         @default(0)
  room           Room        @relation(fields: [roomId], references: [id])
  roomId         Int
  statements     Statement[]
  selectedAnswer Int?
  done           Boolean     @default(false)
}

model Statement {
  id       Int     @id @default(autoincrement())
  text     String
  isTrue   Boolean
  player   Player  @relation(fields: [playerId], references: [id])
  playerId Int
}
